% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_emiss.R
\name{plot_emiss}
\alias{plot_emiss}
\title{Plot emission distributions of a Bayesian Multilevel Hidden Markov Model}
\usage{
plot_emiss(
  model,
  type = "bar",
  subject_effects = TRUE,
  cat_labels = NULL,
  position = ggplot2::position_jitter(width = 0.2, height = 0),
  alpha = 0.75,
  line = FALSE,
  subject = NULL
)
}
\arguments{
\item{model}{Object of type `mHMMbayes::mHMM`, created using [mHMMbayes::mHMM()].}

\item{type}{String specifying the type of plot to return. Currently takes "bar" and "boxplot".}

\item{subject_effects}{Logical specifying whether a layer of individual estimates should be plotted.}

\item{cat_labels}{Character vector of labels for the categorical variables.}

\item{position}{Object created with ggplot2::position_jitter indicating the amount of jitter.}

\item{alpha}{Numeric value indicating transparency of subject-specific posterior densities.}

\item{line}{Logical indicating whether to plot lines when plotting individual-level distributions.}

\item{subject}{Vector indicating the subjects to plot when `subject_effects = TRUE`. Default is `NULL`, which means all subjects are plotted.}
}
\value{
Object of type `ggplot2::gg` plotting emission distributions.
}
\description{
Plot emission distributions of a Bayesian Multilevel Hidden Markov Model
}
\examples{
\dontrun{
library(mHMMbayes)
# simulating multivariate continuous data
n_t     <- 100
n       <- 10
m       <- 3
n_dep   <- 2

gamma   <- matrix(c(0.8, 0.1, 0.1,
                    0.2, 0.7, 0.1,
                    0.2, 0.2, 0.6), ncol = m, byrow = TRUE)

emiss_distr <- list(matrix(c( 50, 10,
                              100, 10,
                              150, 10), nrow = m, byrow = TRUE),
                    matrix(c(5, 2,
                             10, 5,
                             20, 3), nrow = m, byrow = TRUE))

data_cont <- sim_mHMM(n_t = n_t, n = n, data_distr = 'continuous',
                      gen = list(m = m, n_dep = n_dep),
                      gamma = gamma, emiss_distr = emiss_distr,
                      var_gamma = .1, var_emiss = c(5^2, 0.2^2))

# Specify hyper-prior for the continuous emission distribution
manual_prior_emiss <- prior_emiss_cont(
                        gen = list(m = m, n_dep = n_dep),
                        emiss_mu0 = list(matrix(c(30, 70, 170), nrow = 1),
                                         matrix(c(7, 8, 18), nrow = 1)),
                        emiss_K0 = list(1, 1),
                        emiss_V =  list(rep(5^2, m), rep(0.5^2, m)),
                        emiss_nu = list(1, 1),
                        emiss_a0 = list(rep(1.5, m), rep(1, m)),
                        emiss_b0 = list(rep(20, m), rep(4, m)))

# Run the model on the simulated data:
# Note that for reasons of running time, J is set at a ridiculous low value.
# One would typically use a number of iterations J of at least 1000,
# and a burn_in of 200.
out_3st_cont_sim <- mHMM(s_data = data_cont$obs,
                         data_distr = 'continuous',
                         gen = list(m = m, n_dep = n_dep),
                         start_val = c(list(gamma), emiss_distr),
                         emiss_hyp_prior = manual_prior_emiss,
                         mcmc = list(J = 11, burn_in = 5))

plot_emiss(out_3st_cont_sim)
}
}
